#2108
import sys
input = sys.stdin.readline
N = int(input())
#숫자 정리
lst = [0] * 8001
num_list =[]
for _ in range(N):
    K = int(input())
    lst[K+4000] += 1
    
for i in range(8001):
    if lst[i]>0:
        for _ in range(lst[i]):
            num_list.append(i-4000)
# 산술평균
ar_mean = round((sum(num_list)/N),0)
if ar_mean == -0 :
    print(0)
else: print(int(ar_mean))

#중앙값
senter = int((N-1)/2)
print(num_list[senter])

#최빈값
M_freq = max(lst)
indices = [index-4000 for index, value in enumerate(lst) if value == M_freq]
if len(indices) == 1:
    print(indices[0])
elif len(indices) > 1:
    print(indices[1])

#범위
print(num_list[N-1] - num_list[0])


#sort, count 함수는 숫자가 많을 경우 시간이 많이 걸림. 그리고 가장 중요한 것은
#import sys
#input = sys.stdin.readline 이 부분이 중요하다. print를 일일이 다 치면 시간에러가 난다.
#그리고 num_list.extend([i - 4000] * lst[i]) extend를 사용하면 이중 리스트가
#생기지 않는 것 같다.
#이제 [0] * ~~ 잘 쓸 수 있을 것 같다.
